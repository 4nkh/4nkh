<% content_for :head do %>
  <style>
    #header_inner{-moz-box-shadow:-3px 8px 10px 2px #999;-webkit-box-shadow:-5px 10px 10px #999;box-shadow:-5px 10px 10px #999;}
  </style>
<% end %>


<% content_for :hd_inner do %>
	<%= render :partial => 'shared/banner' %>
<% end %>

<div class="clear">&nbsp;</div>
<div class="clear">&nbsp;</div>

<div id="title" class="group">
  <div class="clear">&nbsp;</div>
  
  <canvas id="myCanvas" width="600px" height="400px"></canvas>
  
</div>

<style>
	#myCanvas {border:1px solid #000;}
	  
</style>
<script>
	
	// RECTANGLE
	// start_x, start_y, stop_x, stop_y	  
	function build_red_ractangle(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

	  	ctx.fillStyle = "#FF0000";
	  	ctx.fillRect(10, 10, 150, 75);
   };
   
	function draw_a_rectangle(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.beginPath();
		ctx.rect(20, 20, 150, 100);
		ctx.stroke();
	};
	  
   function draw_a_line(){ 
	  	const canvas = document.getElementById("myCanvas");
	  	const ctx = canvas.getContext("2d");

	  	ctx.moveTo(0, 0);
	  	ctx.lineTo(200, 100);
	  	ctx.stroke();
	};
	
    function build_a_line(){ 
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		// Define a new Path:
		ctx.beginPath();
		// Define a start Point
		ctx.moveTo(0, 0);
		// Define an end Point
		ctx.lineTo(400, 300);
		// Define the width of the line
		ctx.lineWidth = 10;
		// Define the syle 
		ctx.strokeStyle = "red";
		//cap style (butt, round, square)
		ctx.lineCap = "square";
		// Stroke it (Do the Drawing)
		ctx.stroke();
 	};
	
	function draw_line_shape(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.beginPath();
		ctx.moveTo(20,20);
		ctx.lineTo(100,20);
		ctx.lineTo(175,100);
		ctx.lineTo(20,100);
		ctx.lineTo(20,20);
		ctx.stroke();
	};
	
	function draw_triangle(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");
		
		ctx.beginPath();

		ctx.moveTo(100,20);
		ctx.lineTo(175,100);
		ctx.lineTo(20,100);
		ctx.lineTo(100,20);
		
		ctx.stroke();
	};
	
	function draw_multiple_shape(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");
		
		ctx.beginPath();

		// Define a rectangle
		ctx.moveTo(20,20);
		ctx.lineTo(175,20);
		ctx.lineTo(175,100);
		ctx.lineTo(20,100);
		ctx.lineTo(20,20);

		// Define a triangle
		ctx.moveTo(100,20);
		ctx.lineTo(175,100);
		ctx.lineTo(20,100);
		ctx.lineTo(100,20);

		ctx.strokeStyle = "red";
		ctx.stroke();
	};
	
	function draw_three_rectangles(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		// Red rectangle
		ctx.beginPath();
		ctx.lineWidth = "6";
		ctx.strokeStyle = "red";
		ctx.rect(5, 5, 290, 140);
		ctx.stroke();

		// Green rectangle
		ctx.beginPath();
		ctx.lineWidth = "4";
		ctx.strokeStyle = "green";
		ctx.rect(30, 30, 50, 50);
		ctx.stroke();

		// Blue rectangle
		ctx.beginPath();
		ctx.lineWidth = "10";
		ctx.strokeStyle = "blue";
		ctx.rect(50, 50, 150, 80);
		ctx.stroke();
	};
	
	
	// CIRCLE
	
	//beginPath() - Begin a path
	//arc(x,y,r,start,end) - Define a circle
	//stroke() - Stroke it
	
	function draw_a_circle(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.beginPath();
		ctx.arc(95, 50, 40, 0, 2 * Math.PI);
		ctx.stroke();
	};
	
	function draw_a_demi_circle(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.beginPath();
		ctx.arc(100, 50, 50, 0, Math.PI);
		ctx.stroke();
	};
	
	// GRADIENT
	//createLinearGradient(x,y,x1,y1) - creates a linear gradient
	//createRadialGradient(x,y,r,x1,y1,r1) - creates a radial/circular gradient
	
	//The addColorStop() method specifies the color stops, and its position along the gradient. Gradient positions can be anywhere between 0 to 1.

	//To use the gradient, set the fillStyle or strokeStyle property to the gradient, then draw the shape (rectangle, text, or a line)
	
	function create_linear_gradient(){
		const c = document.getElementById("myCanvas");
		const ctx = c.getContext("2d");

		// Create gradient
		const grd = ctx.createLinearGradient(0, 0, 200, 0);
		grd.addColorStop(0, "red");
		grd.addColorStop(1, "white"); //0.5

		// Fill with gradient
		ctx.fillStyle = grd;
		ctx.fillRect(10, 10, 150, 80);
	};
	function create_linear_circular_gradient(){
		const c = document.getElementById("myCanvas");
		const ctx = c.getContext("2d");

		// Create gradient
		const grd = ctx.createRadialGradient(75, 50, 5, 90, 60, 100);
		grd.addColorStop(0, "transparent");
		grd.addColorStop(1, "red");

		// Fill with gradient
		ctx.fillStyle = grd;
		ctx.fillRect(10, 10, 150, 80);
	};
	
	// TEXT DRAWING
	//font - defines the font properties for the text
	//fillText(text,x,y) - draws "filled" text on the canvas
	//strokeText(text,x,y) - draws text on the canvas (no fill)
	
	function draw_text(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.font = "30px Arial";
		ctx.fillText("Hello World", 10, 50);
	};
	function draw_stroke_text(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.font = "30px Arial";
		ctx.strokeText("Hello World", 10, 50);
	};
	
	function draw_middle_red_text(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");

		ctx.font = "30px Comic Sans MS";
		ctx.fillStyle = "red";
		ctx.textAlign = "center";
		ctx.fillText("Hello World", canvas.width/2, canvas.height/2);
	};
	
	// load IMAGE
	function display_picture(){
		const canvas = document.getElementById("myCanvas");
		const ctx = canvas.getContext("2d");
		const img = document.getElementsByClassName("logo")[0].childNodes[0]; // img inside the homepage_link
		ctx.drawImage(img, 10, 10);
		console.log(img);
	};
	
	// CLOCK

	function build_clock(first=true){
		document.getElementById("myCanvas").style.backgroundColor = "black";
		const canvas = document.getElementById("myCanvas");
		
		const ctx = canvas.getContext("2d");
		let radius = canvas.height / 2;
		if(first == false) {
		  //ctx.translate(radius, radius);
	    } else {
	      ctx.translate(radius, radius);
		  ctx.translate(30, 0);
	    }
		radius = radius * 0.90
		drawClock(ctx, radius);
		setInterval(function() { build_clock(false);}, 1000);
		//function drawClock() {
	    // 	ctx.arc(0, 0, radius, 0 , 2 * Math.PI);
		// 	ctx.fillStyle = "white";
		// 	ctx.fill();
		//};
	};
	//function drawClock(ctx, radius) {
	//  	ctx.arc(0, 0, radius, 0 , 2 * Math.PI);
	//  	ctx.fillStyle = "white";
	//  	ctx.fill();
	//};
	
	// MORE
	function drawClock(ctx, radius) {
	  drawFace(ctx, radius);
	  drawNumbers(ctx, radius);
	  drawTime(ctx, radius);
	  //setInterval(function() { drawTime(ctx, radius);}, 1000);
	  //setInterval(drawTime(ctx, radius), 1000);
	};

	// BACKGROUND CIRCLES
	function drawFace(ctx, radius) {
	  const grad = ctx.createRadialGradient(0, 0 ,radius * 0.95, 0, 0, radius * 1.05);
	  grad.addColorStop(0, '#333');
	  grad.addColorStop(0.5, 'white');
	  grad.addColorStop(1, '#333');

	  ctx.beginPath();
	  ctx.arc(0, 0, radius, 0, 2 * Math.PI);
	  ctx.fillStyle = 'white';
	  ctx.fill();

	  ctx.strokeStyle = grad;
	  ctx.lineWidth = radius*0.1;
	  ctx.stroke();

	  ctx.beginPath();
	  ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
	  ctx.fillStyle = '#333';
	  ctx.fill();
	};
	
	// NUMBERS
	function drawNumbers(ctx, radius) {
	  ctx.font = radius * 0.15 + "px arial";
	  ctx.textBaseline = "middle";
	  ctx.textAlign = "center";
	  for(let num = 1; num < 13; num++){
	    let ang = num * Math.PI / 6;
	    ctx.rotate(ang);
	    ctx.translate(0, -radius * 0.85);
	    ctx.rotate(-ang);
	    ctx.fillText(num.toString(), 0, 0);
	    ctx.rotate(ang);
	    ctx.translate(0, radius * 0.85);
	    ctx.rotate(-ang);
	  }
    };
	
	// GET TIME
	function drawTime(ctx, radius) {
	  const now = new Date();
	  let hour = now.getHours();
	  let minute = now.getMinutes();
	  let second = now.getSeconds();
	  //hour
	  hour = hour%12;
	  hour = (hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60));
	  drawHand(ctx, hour, radius*0.5, radius*0.07);
	  //minute
	  minute = (minute*Math.PI/30)+(second*Math.PI/(30*60));
	  drawHand(ctx, minute, radius*0.8, radius*0.07);
	  // second
	  second = (second*Math.PI/30);
	
	  drawHand(ctx, second, radius*0.9, radius*0.02);
	}
	
	// NEEDLES
	function drawHand(ctx, pos, length, width) {
	  ctx.beginPath();
	  ctx.lineWidth = width;
	  ctx.lineCap = "round";
	  ctx.moveTo(0,0);
	  ctx.rotate(pos);
	  ctx.lineTo(0, -length);
	  ctx.stroke();
	  ctx.rotate(-pos);
	}
	//function clear_needles(ctx){
	//  ctx.clearline(0, -length);
	//}
	//setInterval(build_clock, 1000);
	
	//DIGITAL CLOCK
	build_clock(true);
	function build_time(){
		console.log("allo");
		const d = new Date();
		document.getElementById("title").innerHTML = d.toLocaleTimeString();
	};
	 //drawTime(ctx, radius), 1000);
	
  </script>
